@model PagedList.IPagedList<ProductMgmtMvc.Models.ProductDetails>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<br />
<br />
<br />
<br />
<h3 align="center" style="font-weight:bold; font-size:30px;">Products List</h3>
<hr />
<div style=" position: relative;
    float: right; margin-right: 10px;">

    <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown">
        Sort By
        <span class="caret"></span>
    </button>
    <div class="dropdown-menu">
        <h6>
            @Html.ActionLink("Sort By Product Name", "Index", new { sortOrder = "name_desc", CurrentFilter = ViewBag.CurrentFilter }, new { @class = "dropdown-item" })
        </h6>
        <h6>
            @Html.ActionLink("Sort By Category Name", "Index", new { sortOrder = "category_desc", CurrentFilter = ViewBag.CurrentFilter }, new { @class = "dropdown-item" })
        </h6>
    </div>

</div>

@using (Html.BeginForm("Index", "Main", FormMethod.Get))
{

    <div class="md-form mt-0">
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "Search By Product Name or Category", size = 40 })

        <input type="submit" value="Search " class="btn btn-primary btn-sm" />

    </div>
}
<hr />
@using (Html.BeginForm("MultipleDelete", "Main", FormMethod.Post))
{

    <section class="events-list-area section-gap event-page-lists">
        <div class="container">
            <div class="row align-items-center  ">

                @foreach (var item in Model)
                {

                    <div class="col-lg-6 pb-30 col-margin ">
                        <div class="single-carusel row align-items-center pop">
                            <div class="col-12 col-md-6 thumb">
                                <input type="checkbox" name="product_ids" id="product_ids" value="@item.Id">

                                <img class="img-fluid img-eve " src="@Url.Content(item.small_img) " height="240px " width="180px" alt="">

                            </div>
                            <div class="detials col-12 col-md-6">

                                <h4>
                                    @Html.DisplayFor(modelItem => item.product_name)
                                </h4>
                                <p>
                                    Category:
                                    @Html.DisplayFor(modelItem => item.category_name)
                                </p>
                                <p>
                                    Short Description:
                                    @Html.DisplayFor(modelItem => item.short_des)

                                </p>
                                <p>
                                    Long Description:
                                    @Html.DisplayFor(modelItem => item.long_des)

                                </p>
                                <p>
                                    Price :
                                    @Html.DisplayFor(modelItem => item.price)

                                </p>
                                <p>
                                    Quantity:
                                    @Html.DisplayFor(modelItem => item.quantity)

                                </p>
                                <h4 class="content-title mx-auto text-uppercase Bpop">

                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                </h4>
                            </div>
                        </div>
                    </div>


                }


            </div>
        </div>
    </section>
    <br />
    <br />
    <input type="submit" value="Delete Selected Products" class="btn btn-primary btn-default ">
}

<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, CurrentFilter = ViewBag.CurrentFilter }))
