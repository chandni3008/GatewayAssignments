@model ProductMgmtMvc.Models.ProductDetails

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("EditDetails", "Main", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3 align="center" style="font-weight:bold; font-size:30px;">Update Product</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.category_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            <select class="form-control" name="category_name">
                <option @(Model.category_name.Equals("Shoes") ? "selected" : "")>Shoes</option>
                <option @(Model.category_name.Equals("Men's Wear") ? "selected" : "")>Men's Wear</option>
                <option @(Model.category_name.Equals("Women's Wear") ? "selected" : "")>Women's Wear</option>
                <option @(Model.category_name.Equals("Mobile") ? "selected" : "")>Mobile</option>
            </select>
            @Html.ValidationMessageFor(model => model.category_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            <select class="form-control" name="quantity">
                <option @(Model.quantity.Value == 1 ? "selected" : "")>1</option>
                <option @(Model.quantity.Value == 2 ? "selected" : "")>2</option>
                <option @(Model.quantity.Value == 3 ? "selected" : "")>3</option>
                <option @(Model.quantity.Value == 4 ? "selected" : "")>4</option>
            </select>
            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.short_des, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.short_des, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.short_des, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.long_des, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.long_des, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.long_des, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.smallimg, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="smallimg" class="form-control" id="smallimg">
            @Html.ValidationMessageFor(model => model.smallimg, "", new { @class = "text-danger" })
            <p>Upload only of you want to Update previous Data </p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.largeimg, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="largeimg" class="form-control" id="largeimg">
            @Html.ValidationMessageFor(model => model.largeimg, "", new { @class = "text-danger" })
            <p class="info">Upload only of you want to Update previous Data </p>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save Changes" class="btn btn-sm btn-primary" />
            <input type="button" value="Cancel" class="btn btn-sm btn-primary" onclick="location.href='@Url.Action("Index", "Main")'" />

        </div>
    </div>
</div>
}

